<?xml version="1.0" encoding="UTF-8"?>

<UTQLPatternTemplates xmlns='http://ar.in.tum.de/ubitrack/utql'
                      xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
                      xmlns:xi='http://www.w3.org/2001/XInclude'
                      xmlns:h="http://www.w3.org/1999/xhtml"
                      xsi:schemaLocation='http://ar.in.tum.de/ubitrack/utql ../../../schema/utql_templates.xsd'>
    
    <Pattern name="MarkerModuleConfiguration" displayName="Optical Square-Marker Tracker (Module Configuration)">
        <Description>
            <h:p>Configuration node for various
                <h:code>Marker Tracker XXX</h:code> patterns, has to be unified with the
                <h:code>Camera</h:code> node.
            </h:p>
        </Description>
        <Output>
            <Node name="Camera" displayName="Camera">
                <Attribute name="markerIdMask" displayName="ID Mask" default="0xFFFF" xsi:type="StringAttributeDeclarationType">
                    <Description>
                        <h:p>Bitmask that is ANDed with the ID detected in the image to obtain the
                            <h:code>Marker ID</h:code>. Useful to define general purpose areas inside a marker.
                        </h:p>
                    </Description>
                </Attribute>
                <Attribute name="markerBitSize" displayName="Marker Bit Size" default="6" xsi:type="IntAttributeDeclarationType">
                    <Description>
                        <h:p>Marker size including its border, counted in bits</h:p>
                    </Description>
                </Attribute>
                <Attribute name="codeBitSize" displayName="Code Bit Size" default="4" xsi:type="IntAttributeDeclarationType">
                    <Description>
                        <h:p>Size of ID area inside the marker, counted in bits</h:p>
                    </Description>
                </Attribute>
                <Attribute name="enableInnerEdgels" displayName="Enable inner edgelets" default="true" xsi:type="EnumAttributeDeclarationType">
                    <Description>
                        <h:p>
			Use inner edgelets for pose refinement. Enabling this may result in unstable pose estimation!
                        </h:p>
                    </Description>
                    <EnumValue name="false" displayName="False"/>
                    <EnumValue name="true"  displayName="True"/>
                </Attribute>
            </Node>
        </Output>
    </Pattern>

    <Pattern name="MarkerTrackerUncalibrated" displayName="Optical Square-Marker Tracker (Uncalibrated)">
        <Description>
            <h:p>Detects a marker in a grey-scale image and computes the pose.
			No camera calibration is used. However, the default settings will provide a somewhat 
			correct-looking result when used with the renderer default-settings, even if the numbers
			are wrong.
            </h:p>
        </Description>
        <Input>
            <Node name="Camera" displayName="Camera"/>
            <Node name="ImagePlane" displayName="Image Plane"/>
            <Edge name="Image" displayName="Image" source="Camera" destination="ImagePlane" >
                <Description>
                    <h:p>Greyscale input image.</h:p>
                </Description>
                <Predicate>type=='Image'&amp;&amp;mode=='push'</Predicate>
            </Edge>
        </Input>
        <Output>
            <Node name="Marker" displayName="Marker">
                <Attribute name="markerId" displayName="Marker ID" default="0x272" xsi:type="StringAttributeDeclarationType">
                    <Description>
                        <h:p>Marker ID in Hex, e.g. 0x272. Attention: This ID is used as the module key for the marker tracker algorithm. It must be unique, otherwise deceptive error messages will occur.</h:p>
                    </Description>
                </Attribute>
                <Attribute name="markerSize" displayName="Marker Size" default="0.06" xsi:type="DoubleAttributeDeclarationType">
                    <Description>
                        <h:p>Marker size in m, e.g. 0.06.</h:p>
                    </Description>
                </Attribute>
            </Node>
            <Edge name="Output" source="Camera" destination="Marker" displayName="Marker Pose">
                <Description>
                    <h:p>Pose of marker with respect to camera.</h:p>
                </Description>
                <Attribute name="type" value="6D" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
            <Edge name="DebugImage" source="Camera" destination="ImagePlane" displayName="Debug Image">
                <Description>
                    <h:p>Debug Image to visualize marker tracker.</h:p>
                </Description>
                <Attribute name="type" value="Image" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
        </Output>
        
        <DataflowConfiguration>
            <UbitrackLib class="MarkerTracker"/>
			
            <Attribute name="enableTracking" displayName="Enable tracking" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Enables incremental tracking of the marker which can handle some amount of occlusion.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enablePixelFlow" displayName="Enable pixel flow" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Enables pixel flow for pose prediction. Can handle faster motions and even more occlusion, but 
					will not track orientation.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enableFlipCheck" displayName="Enable flip check" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Checks whether the flipped pose of the marker is better. Requires more processing time, but is often more robust.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enableFastTracking" displayName="Enable fast tracking" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					This option is only valid when tracking is enabled!
                        <h:br/>
                        <h:b>True:</h:b>
					Tries to find the marker first by incremental tracking and only performs a full scan when
					the marker is not found. Requires less processing time, but has problems with flipped poses.
                        <h:br/>
                        <h:b>False:</h:b>
					First does a full scan and only uses incremental tracking for markers that have been occluded.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
		   <Attribute name="enableAdaptiveThreshold" displayName="Enable adaptive Thresholding" default="true" xsi:type="EnumAttributeDeclarationType">
					<Description>
						<h:p>
						For tracking on mobile devices, using adaptive thresholding slows down the application
							<h:br/>
							<h:b>True:</h:b>
						Adaptive Thresholding is used for Thresholding the Image
							<h:br/>
							<h:b>False:</h:b>
						Binary Threshold with the specified binaryThresholdValue is used for Thresholding the Image
						</h:p>
					</Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
		</Attribute>
		<Attribute name="ThresholdValue" min="0" max = "255" default="120" xsi:type="IntAttributeDeclarationType" displayName="ThresholdValue">
				<Description>
					<h:p>If adaptive Thresholding is disabled, binary Thresholding is used with the specified threshold. This value is ignored, if adaptive Thresholding is enabled.</h:p>
				</Description>
	    </Attribute>
        </DataflowConfiguration>
    </Pattern>
    
    <Pattern name="MarkerTrackerCalibrated" displayName="Optical Square-Marker Tracker (Calibrated)">
        <Description>
            <h:p>Please use the new pattern with the 3x3 intrinsic matrix pointing into the other direction. Detects a marker in a grey-scale image and computes the pose.
			Intrinsic camera calibration is used. 
            </h:p>
        </Description>
        <Input>
            <Node name="Camera" displayName="Camera"/>
            <Node name="ImagePlane" displayName="Image Plane"/>
            <Edge name="Image" displayName="Image" source="Camera" destination="ImagePlane" >
                <Description>
                    <h:p>Greyscale input image.</h:p>
                </Description>
                <Predicate>type=='Image'&amp;&amp;mode=='push'</Predicate>
            </Edge>
            <Edge name="CameraIntrinsics" displayName="Intrinsics" source="Camera" destination="ImagePlane" >
                <Description>
                    <h:p>Camera intrinsic matrix.</h:p>
                </Description>
                <Predicate>type=='3x3Matrix'&amp;&amp;mode=='pull'</Predicate>
            </Edge>
        </Input>
        <Output>
            <Node name="Marker" displayName="Marker">
                <Attribute name="markerId" displayName="Marker ID" default="0x272" xsi:type="StringAttributeDeclarationType">
                    <Description>
                        <h:p>Marker ID in Hex, e.g. 0x272. Attention: This ID is used as the module key for the marker tracker algorithm. It must be unique, otherwise deceptive error messages will occur.</h:p>
                    </Description>
                </Attribute>
                <Attribute name="markerSize" displayName="Marker Size" default="0.06" xsi:type="DoubleAttributeDeclarationType">
                    <Description>
                        <h:p>Marker size in m, e.g. 0.06.</h:p>
                    </Description>
                </Attribute>
            </Node>
            <Edge name="Output" source="Camera" destination="Marker" displayName="Marker Pose">
                <Description>
                    <h:p>Pose of marker with respect to camera.</h:p>
                </Description>
                <Attribute name="type" value="6D" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
            <Edge name="DebugImage" source="Camera" destination="ImagePlane" displayName="Debug Image">
                <Description>
                    <h:p>Debug Image to visualize marker tracker.</h:p>
                </Description>
                <Attribute name="type" value="Image" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
        </Output>
        
        <DataflowConfiguration>
            <UbitrackLib class="MarkerTracker"/>
			
            <Attribute name="enableTracking" displayName="Enable tracking" default="true" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Enables incremental tracking of the marker which can handle some amount of occlusion.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enablePixelFlow" displayName="Enable pixel flow" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Enables pixel flow for pose prediction. Can handle faster motions and even more occlusion, but 
					will not track orientation.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enableFlipCheck" displayName="Enable flip check" default="true" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Checks whether the flipped pose of the marker is better. Requires more processing time, but is often more robust.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enableFastTracking" displayName="Enable fast tracking" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					This option is only valid when tracking is enabled!
                        <h:br/>
                        <h:b>True:</h:b>
					Tries to find the marker first by incremental tracking and only performs a full scan when
					the marker is not found. Requires less processing time, but has problems with flipped poses.
                        <h:br/>
                        <h:b>False:</h:b>
					First does a full scan and only uses incremental tracking for markers that have been occluded.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
		   <Attribute name="enableAdaptiveThreshold" displayName="Enable adaptive Thresholding" default="true" xsi:type="EnumAttributeDeclarationType">
					<Description>
						<h:p>
						For tracking on mobile devices, using adaptive thresholding slows down the application
							<h:br/>
							<h:b>True:</h:b>
						Adaptive Thresholding is used for Thresholding the Image
							<h:br/>
							<h:b>False:</h:b>
						Binary Threshold with the specified binaryThresholdValue is used for Thresholding the Image
						</h:p>
					</Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
				</Attribute>
				<Attribute name="ThresholdValue" min="0" max = "255" default="120" xsi:type="IntAttributeDeclarationType" displayName="ThresholdValue">
				<Description>
					<h:p>If adaptive Thresholding is disabled, binary Thresholding is used with the specified threshold. This value is ignored, if adaptive Thresholding is enabled.</h:p>
				</Description>
	    </Attribute>
        </DataflowConfiguration>
    </Pattern>
	
	
    
    <Pattern name="MarkerTrackerError" displayName="Optical Square-Marker Tracker (with Error Estimation)">
        <Description>
            <h:p>Please use the new pattern with the 3x3 intrinsic matrix pointing into the other direction. Detects a marker in a grey-scale image and computes the pose.
			Additionally, the 6DOF-covariance is computed using error propagation. 
            </h:p>
        </Description>
        <Input>
            <Node name="Camera" displayName="Camera"/>
            <Node name="ImagePlane" displayName="Image Plane"/>
            <Edge name="Image" displayName="Image" source="Camera" destination="ImagePlane" >
                <Description>
                    <h:p>Greyscale input image.</h:p>
                </Description>
                <Predicate>type=='Image'&amp;&amp;mode=='push'</Predicate>
            </Edge>
            <Edge name="CameraIntrinsics" displayName="Intrinsics" source="Camera" destination="ImagePlane" >
                <Description>
                    <h:p>Camera intrinsic matrix.</h:p>
                </Description>
                <Predicate>type=='3x3Matrix'&amp;&amp;mode=='pull'</Predicate>
            </Edge>
        </Input>
        <Output>
            <Node name="Marker" displayName="Marker">
                <Attribute name="markerId" displayName="Marker ID" default="0x272" xsi:type="StringAttributeDeclarationType">
                    <Description>
                        <h:p>Marker ID in Hex, e.g. 0x272. Attention: This ID is used as the module key for the marker tracker algorithm. It must be unique, otherwise deceptive error messages will occur.</h:p>
                    </Description>
                </Attribute>
                <Attribute name="markerSize" displayName="Marker Size" default="0.06" xsi:type="DoubleAttributeDeclarationType">
                    <Description>
                        <h:p>Marker size in m, e.g. 0.06.</h:p>
                    </Description>
                </Attribute>
            </Node>
            <Edge name="ErrorPose" source="Camera" destination="Marker" displayName="Marker Pose+Error">
                <Description>
                    <h:p>Pose of marker with respect to camera.</h:p>
                </Description>
                <Attribute name="type" value="6DError" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
            <Edge name="DebugImage" source="Camera" destination="ImagePlane" displayName="Debug Image">
                <Description>
                    <h:p>Debug Image to visualize marker tracker.</h:p>
                </Description>
                <Attribute name="type" value="Image" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
        </Output>
        
        <DataflowConfiguration>
            <UbitrackLib class="MarkerTracker"/>
			
            <Attribute name="enableTracking" displayName="Enable tracking" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Enables incremental tracking of the marker which can handle some amount of occlusion.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enablePixelFlow" displayName="Enable pixel flow" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Enables pixel flow for pose prediction. Can handle faster motions and even more occlusion, but 
					will not track orientation.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enableFlipCheck" displayName="Enable flip check" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Checks whether the flipped pose of the marker is better. Requires more processing time, but is often more robust.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enableFastTracking" displayName="Enable fast tracking" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					This option is only valid when tracking is enabled!
                        <h:br/>
                        <h:b>True:</h:b>
					Tries to find the marker first by incremental tracking and only performs a full scan when
					the marker is not found. Requires less processing time, but has problems with flipped poses.
                        <h:br/>
                        <h:b>False:</h:b>
					First does a full scan and only uses incremental tracking for markers that have been occluded.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
			
        </DataflowConfiguration>
    </Pattern>
	
	
    
    <Pattern name="MarkerTrackerCorners" displayName="Optical Square-Marker Tracker (2D Corners Only)">
        <Description>
            <h:p>Detects markers and computes the 2D-position of the four corners in the image.</h:p>
        </Description>
        <Input>
            <Node name="Camera" displayName="Camera"/>
            <Node name="ImagePlane" displayName="Image Plane"/>
            <Edge name="Image" displayName="Image" source="Camera" destination="ImagePlane" >
                <Description>
                    <h:p>Greyscale input image.</h:p>
                </Description>
                <Predicate>type=='Image'&amp;&amp;mode=='push'</Predicate>
            </Edge>
        </Input>
        <Output>
            <Node name="Marker" displayName="Marker">
                <Attribute name="markerId" displayName="Marker ID" default="0x272" xsi:type="StringAttributeDeclarationType">
                    <Description>
                        <h:p>Marker ID in Hex, e.g. 0x272.</h:p>
                    </Description>
                </Attribute>
                <Attribute name="markerSize" displayName="Marker Size" default="0.06" xsi:type="DoubleAttributeDeclarationType">
                    <Description>
                        <h:p>Marker size in m, e.g. 0.06.</h:p>
                    </Description>
                </Attribute>
            </Node>
            <Edge name="Corners" source="ImagePlane" destination="Marker" displayName="Marker Corners">
                <Description>
                    <h:p>Image coordinates of marker corners.</h:p>
                </Description>
                <Attribute name="type" value="2DPositionList" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
            <Edge name="DebugImage" source="Camera" destination="ImagePlane" displayName="Debug Image">
                <Description>
                    <h:p>Debug Image to visualize marker tracker.</h:p>
                </Description>
                <Attribute name="type" value="Image" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
        </Output>
        
        <DataflowConfiguration>
            <UbitrackLib class="MarkerTracker"/>
			
            <Attribute name="enableTracking" displayName="Enable tracking" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Enables incremental tracking of the marker which can handle some amount of occlusion.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enablePixelFlow" displayName="Enable pixel flow" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Enables pixel flow for pose prediction. Can handle faster motions and even more occlusion, but 
					will not track orientation.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enableFlipCheck" displayName="Enable flip check" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					Checks whether the flipped pose of the marker is better. Requires more processing time, but is often more robust.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
            <Attribute name="enableFastTracking" displayName="Enable fast tracking" default="false" xsi:type="EnumAttributeDeclarationType">
                <Description>
                    <h:p>
					This option is only valid when tracking is enabled!
                        <h:br/>
                        <h:b>True:</h:b>
					Tries to find the marker first by incremental tracking and only performs a full scan when
					the marker is not found. Requires less processing time, but has problems with flipped poses.
                        <h:br/>
                        <h:b>False:</h:b>
					First does a full scan and only uses incremental tracking for markers that have been occluded.
                    </h:p>
                </Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
            </Attribute>
			<Attribute name="enableAdaptiveThreshold" displayName="Enable adaptive Thresholding" default="true" xsi:type="EnumAttributeDeclarationType">
					<Description>
						<h:p>
						For tracking on mobile devices, using adaptive thresholding slows down the application
							<h:br/>
							<h:b>True:</h:b>
						Adaptive Thresholding is used for Thresholding the Image
							<h:br/>
							<h:b>False:</h:b>
						Binary Threshold with the specified binaryThresholdValue is used for Thresholding the Image
						</h:p>
					</Description>
                <EnumValue name="false" displayName="False"/>
                <EnumValue name="true"  displayName="True"/>
				</Attribute>
				<Attribute name="ThresholdValue" min="0" max = "255" default="120" xsi:type="IntAttributeDeclarationType" displayName="ThresholdValue">
				<Description>
					<h:p>If adaptive Thresholding is disabled, binary Thresholding is used with the specified threshold. This value is ignored, if adaptive Thresholding is enabled.</h:p>
				</Description>
	    </Attribute>
        </DataflowConfiguration>
    </Pattern>
	    
    <!-- Attribute declarations -->
	
	
	
	
    <GlobalNodeAttributeDeclarations>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/1/1)"/>
    </GlobalNodeAttributeDeclarations>
    
    <GlobalEdgeAttributeDeclarations>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/1)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/2)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/3)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/4)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/5)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/6)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/7)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/8)"/>
    </GlobalEdgeAttributeDeclarations>
    
    <GlobalDataflowAttributeDeclarations>
        <!-- Unfortunately, the xpointer used in Xinclude is currently restricted to the element scheme and absolute element indices in Xerces (and thus XMLBeans) -->
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/1)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/2)"/>
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/3)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/4)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/5)"/>
    </GlobalDataflowAttributeDeclarations>
    
</UTQLPatternTemplates>
